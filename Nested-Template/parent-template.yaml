apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: parent-template
  title: Parent Template for Application Scaffolding
  description: Scaffold either a Web Application or a Microservice based on user selection
spec:
  type: service
  owner: your-team@example.com
  parameters:
    - title: Application Configuration
      required:
        - appType
        - repoName
        - repoVisibility
      properties:
        appType:
          type: string
          title: Application Type
          description: Choose the type of application to scaffold
          enum:
            - Web App
            - Microservice
        repoName:
          type: string
          title: GitHub Repository Name
          description: Name of the GitHub repository
        repoVisibility:
          type: string
          title: Repository Visibility
          description: Choose the visibility of the repository
          enum:
            - public
            - private
  steps:
    # - id: create-repo
    #   name: Create GitHub Repository
    #   action: publish:github/createRepo
    #   input:
    #     repoName: ${{ parameters.appType | replace(' ', '-') | lower }}
    #     private: false
    # - id: call-nested-template
    #   name: Call Nested Template
    #   action: templater:run
    #   input:
    #     templateUrl: >
    #       {{ if eq parameters.appType "Web Application" }}
    #         ./Nested-Template/web-app/template.yaml
    #       {{ else if eq parameters.appType "Microservice" }}
    #         ./Nested-Template/microservice/template.yaml
    #       {{ end }}
    #     values:
    #       repoUrl: ${{ steps.create-repo.outputs.repoUrl }}
    - id: select-template
      name: Select and Run Nested Template
      action: templater:run
      input:
        url: ./web-app/template.yaml
        values:
          repoName: ${{ parameters.repoName }}
          repoVisibility: ${{ parameters.repoVisibility }}
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        repoUrl: 'github.com?owner=rohit7533&repo=${{ parameters.repoName }}'
        #access: 'private'
        #repoUrl: '${{ parameters.owner }}/${{ parameters.name }}'
        defaultBranch: main
        sourcePath: ./output
    # - id: publish-to-github
    #   name: Publish to GitHub
    #   action: publish:github
    #   input:
    #     allowedHosts: ['github.com']
    #     repoUrl: https://github.com/rohit753/${{ parameters.repoName }}
    #     branch: main
    #     sourcePath: ./output
  output:
    repoUrl: ${{ steps.create-repo.outputs.repoUrl }}
    cloneUrl: ${{ steps.create-repo.outputs.cloneUrl }}
